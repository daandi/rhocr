1. Implementiert
	* HOCR einlesen
	* Auf HOCR-Elemente zugreifen
	* Als Text ausgeben
	* Als formatiertes HTML ausgeben (Stylesheet fehlt)
	* Auf Grafik ausgeben (nur ohne Nesting)
	
	* Erste Tests um Elemente mit Features zu versehen

2. geplant
	* ABBYY-XML
	* Algorithmen um Elemente mit Features zu versehen
	* logische Strukturen markieren

3. Probleme
	* Testdaten, Stabi liefert schlecht Grafiken
	* Geschwindigkeit
	* Algorithmen, wie integrieren? Sollte modular sein
	* Feste Ordnung wird zur Zeit voraussgesetz

4. Bisheriges Vorgehen
	=> HOCR einlesen, parsen
	=> OCRElemente nach bestimmten Kriterien mit Features versehen
	=> Anhand von Features logische Strukturen ermitteln
	
	
	
5. geplante Schritte
	* OCRs in ABBYY-XML von Dokumenten in Antrag anfertigen
	* Tests in Ruby-Version
	* weitere Algorithmen um Features zu finden
	
	* Scala/Java - Version
	* Uli/Thorsten XML integrieren
	* GUI

6. 	Idee: 
		=> Nutzer wählt Bereiche in GUI aus und benennt sie.
		=> Features der gewählten Bereiche werden ermittelt.
		=> Anhand der Features werden aus dem gesamten Dokument die logischen Strukturen extrahiert
		=> Feedbackschleife in GUI mit 
			Grafik+Marker|Text als HTML mit Marker|
